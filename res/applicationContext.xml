<?xml version="1.0" encoding="UTF-8"?>
<beans default-autowire="byName"
       xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans.xsd
            http://www.springframework.org/schema/tx
            http://www.springframework.org/schema/tx/spring-tx.xsd
            http://www.springframework.org/schema/aop
            http://www.springframework.org/schema/aop/spring-aop.xsd
            http://www.springframework.org/schema/context
            http://www.springframework.org/schema/context/spring-context.xsd"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context">
    <context:annotation-config/>
	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<value>classpath:database.properties</value>
		</property>
	</bean>
	<!-- 扫描Service -->
	<!-- 扫描的包路径 去掉mvc的注解-->
	<context:component-scan base-package="com.apps">
	<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

	<!-- ***************配置数据源************** -->
	<bean id="stat-filter" class="com.alibaba.druid.filter.stat.StatFilter">
    <property name="slowSqlMillis" value="3000" />
    <property name="logSlowSql" value="true" />
	</bean>

	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
		<property name="driverClassName">
			<value>${diver_name}</value>
		</property>
		<property name="url">
			<value>${url}</value>
		</property>

		<property name="username">
			<value>${username}</value>
		</property>
		<property name="password">
			<value>${password}</value>
		</property>
	<property name="proxyFilters">
        <list>
            <ref bean="stat-filter" />
        </list>
    </property>
		
		<property name="maxActive">
			<value>50</value>
		</property>
		<property name="initialSize">
			<value>5</value>
		</property>
		<property name="maxWait">
			<value>60000</value>
		</property>
		<property name="minIdle">
			<value>5</value>
		</property>
		<property name="removeAbandoned">
			<value>true</value>
		</property>
		
		<!-- 关闭abanded连接时输出错误日志 -->
		<property name="logAbandoned" value="true" /> 
		
		<property name="removeAbandonedTimeout">
			<value>1800</value>
		</property>
		<property name="testWhileIdle">
			<value>true</value>
		</property> <!-- 打开检查,用异步线程evict进行检查 -->
		<property name="testOnBorrow">
			<value>true</value>
		</property>
		<property name="testOnReturn">
			<value>false</value>
		</property>
		<property name="validationQuery">
			<value>select  1 </value>
		</property>
		
		<property name="minEvictableIdleTimeMillis">
			<value>300000</value>
		</property>
		<property name="timeBetweenEvictionRunsMillis">
			<value>60000</value>
		</property>
		<property name="numTestsPerEvictionRun">
			<value>50</value>
		</property>
	</bean>
	
	<!-- ***************事务配置************** -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<aop:config>  
        <aop:advisor pointcut="execution(* com.jeecg.service.*.*(..))"  advice-ref="txAdvice" />  
        <aop:advisor pointcut="execution(* scott.service.*.*(..))"  advice-ref="txAdvice" />  
    </aop:config>  
  
    <tx:advice id="txAdvice" transaction-manager="transactionManager">  
        <tx:attributes>  
            <tx:method name="get*" read-only="true" />  
            <tx:method name="query*" read-only="true" />  
            <tx:method name="find*" read-only="true" />  
            <tx:method name="load*" read-only="true" />
            <tx:method name="select*" read-only="true" />  
            <tx:method name="*" propagation="REQUIRED" rollback-for="Exception" />  
        </tx:attributes>  
    </tx:advice>  
	
	
	<!-- 扫描 MyBatis Sql -->
	<bean id="msqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
	<property name="dataSource" ref="dataSource"/>
		<property name="mapperLocations">
			 <list>
			  	<value>classpath:com/apps/**/*Mapper.xml</value>
			 </list>
		</property>
	</bean>
	

   <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer"  autowire="byName">  
  	  <property name="basePackage" value="com.apps.**.dao" />
      <property name="sqlSessionFactoryBeanName" value="msqlSessionFactory"/>  
   </bean> 


	<!-- 配置namedParameterJdbcTemplate  -->
 	<bean id="jdbc"  class="org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate">  
		 <constructor-arg ref="dataSource" />   
	</bean>
	
	
		<!-- 配置jdbcCall 用于调用存储过程和数据库函数 ,不要使用单例模式!!!!!! -->
 	<bean id="jdbcCall" scope="prototype"  class="org.springframework.jdbc.core.simple.SimpleJdbcCall">  
		 <constructor-arg ref="dataSource" />   
    </bean>
    
  
	<!-- Spring 工具类 -->
	<bean id="springContextUtil" class="com.base.util.SpringContextUtil" />
	
	<!-- 设置文件上传时的参数  -->
	<!--  这里申明的id必须为multipartResolver  -->  
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">  
	    <property name="maxUploadSize" value="10240"/><!-- 10MB 限制上传文件大小。单位：byte  -->
	    <property name="defaultEncoding" value="UTF-8"/><!-- 请求的编码格式 -->
<!-- 	    <property name="uploadTempDir" value="upload/temp"/> 上传的临时目录-->
	</bean>
</beans>

